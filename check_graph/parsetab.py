
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DIGRAPH DIRECTED GRAPH ID NUMBER STRICT STRING UNDIRECTEDgraph : strict graphtype ID '{' stmtlist  '}'strict : STRICT\n                  | emptygraphtype : GRAPH\n                     | DIGRAPHstmtlist : stmt ';' stmtlist\n                    | stmt\n                    | emptystmt : vertex\n                | edgevertex : NUMBER optattributes\n        edge : NUMBER DIRECTED NUMBER\n             | NUMBER UNDIRECTED NUMBER\n        optattributes : '[' attributelist ']'\n                         | emptyattributelist : attribute ',' attributelist\n                         | attribute\n                         | emptyattribute : ID '=' STRINGempty :"
    
_lr_action_items = {'STRICT':([0,],[3,]),'GRAPH':([0,2,3,4,],[-20,6,-2,-3,]),'DIGRAPH':([0,2,3,4,],[-20,7,-2,-3,]),'$end':([1,16,],[0,-1,]),'ID':([5,6,7,21,31,],[8,-4,-5,29,29,]),'{':([8,],[9,]),'}':([9,10,11,12,13,14,15,17,18,22,23,24,25,30,],[-20,16,-7,-8,-9,-10,-20,-20,-11,-15,-6,-12,-13,-14,]),'NUMBER':([9,17,19,20,],[15,15,24,25,]),';':([11,13,14,15,18,22,24,25,30,],[17,-9,-10,-20,-11,-15,-12,-13,-14,]),'DIRECTED':([15,],[19,]),'UNDIRECTED':([15,],[20,]),'[':([15,],[21,]),']':([21,26,27,28,31,33,34,],[-20,30,-17,-18,-20,-16,-19,]),',':([27,34,],[31,-19,]),'=':([29,],[32,]),'STRING':([32,],[34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'graph':([0,],[1,]),'strict':([0,],[2,]),'empty':([0,9,15,17,21,31,],[4,12,22,12,28,28,]),'graphtype':([2,],[5,]),'stmtlist':([9,17,],[10,23,]),'stmt':([9,17,],[11,11,]),'vertex':([9,17,],[13,13,]),'edge':([9,17,],[14,14,]),'optattributes':([15,],[18,]),'attributelist':([21,31,],[26,33,]),'attribute':([21,31,],[27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> graph","S'",1,None,None,None),
  ('graph -> strict graphtype ID { stmtlist }','graph',6,'p_graph','dotimport.py',114),
  ('strict -> STRICT','strict',1,'p_strict','dotimport.py',118),
  ('strict -> empty','strict',1,'p_strict','dotimport.py',119),
  ('graphtype -> GRAPH','graphtype',1,'p_graphtype','dotimport.py',123),
  ('graphtype -> DIGRAPH','graphtype',1,'p_graphtype','dotimport.py',124),
  ('stmtlist -> stmt ; stmtlist','stmtlist',3,'p_stmtlist','dotimport.py',129),
  ('stmtlist -> stmt','stmtlist',1,'p_stmtlist','dotimport.py',130),
  ('stmtlist -> empty','stmtlist',1,'p_stmtlist','dotimport.py',131),
  ('stmt -> vertex','stmt',1,'p_stmt','dotimport.py',135),
  ('stmt -> edge','stmt',1,'p_stmt','dotimport.py',136),
  ('vertex -> NUMBER optattributes','vertex',2,'p_vertex','dotimport.py',140),
  ('edge -> NUMBER DIRECTED NUMBER','edge',3,'p_edge','dotimport.py',146),
  ('edge -> NUMBER UNDIRECTED NUMBER','edge',3,'p_edge','dotimport.py',147),
  ('optattributes -> [ attributelist ]','optattributes',3,'p_optattributes','dotimport.py',153),
  ('optattributes -> empty','optattributes',1,'p_optattributes','dotimport.py',154),
  ('attributelist -> attribute , attributelist','attributelist',3,'p_attributelist','dotimport.py',160),
  ('attributelist -> attribute','attributelist',1,'p_attributelist','dotimport.py',161),
  ('attributelist -> empty','attributelist',1,'p_attributelist','dotimport.py',162),
  ('attribute -> ID = STRING','attribute',3,'p_attribute','dotimport.py',174),
  ('empty -> <empty>','empty',0,'p_empty','dotimport.py',181),
]
